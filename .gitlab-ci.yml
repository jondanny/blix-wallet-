image: docker:20

services:
  - docker:20-dind

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay

stages:
  - test
  - deploy-development
  - deploy-production

test:
  stage: test
  services:
  - name: docker:20-dind
    command: ["--tls=false"]
  script:
    - docker-compose run --rm api sh -c "npm run migration:run:ci && npm run test:ci"
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

deploy-development:
  stage: deploy-development
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  services:
  - name: docker:20-dind
    command: ["--tls=false"]
  before_script:
    - amazon-linux-extras install docker
    - curl -SL https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - yum install -y yum-utils
    - yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
    - yum -y install terraform-1.2.9
    - aws --version
    - docker --version
    - docker-compose --version
    - terraform -v
  environment: development
  script:
    - docker login -u AWS -p $(aws ecr get-login-password --region eu-west-1) $APP_REGISTRY_URL
    
    - docker pull $APP_REGISTRY_URL/valicit_backend:api-development
    - docker build --cache-from $APP_REGISTRY_URL/valicit_backend:api-development . -t $APP_REGISTRY_URL/valicit_backend:api-development --build-arg BUILD_APP=api
    - docker push $APP_REGISTRY_URL/valicit_backend:api-development

    - docker pull $APP_REGISTRY_URL/valicit_backend:web-development
    - docker build --cache-from $APP_REGISTRY_URL/valicit_backend:web-development . -t $APP_REGISTRY_URL/valicit_backend:web-development --build-arg BUILD_APP=web
    - docker push $APP_REGISTRY_URL/valicit_backend:web-development

    - docker pull $APP_REGISTRY_URL/valicit_backend:admin-development
    - docker build --cache-from $APP_REGISTRY_URL/valicit_backend:admin-development . -t $APP_REGISTRY_URL/valicit_backend:admin-development --build-arg BUILD_APP=admin
    - docker push $APP_REGISTRY_URL/valicit_backend:admin-development

    - docker pull $APP_REGISTRY_URL/valicit_backend:producer-development
    - docker build --cache-from $APP_REGISTRY_URL/valicit_backend:producer-development . -t $APP_REGISTRY_URL/valicit_backend:producer-development --build-arg BUILD_APP=producer
    - docker push $APP_REGISTRY_URL/valicit_backend:producer-development

    - docker pull $APP_REGISTRY_URL/valicit_backend:consumer-development
    - docker build --cache-from $APP_REGISTRY_URL/valicit_backend:consumer-development . -t $APP_REGISTRY_URL/valicit_backend:consumer-development --build-arg BUILD_APP=consumer
    - docker push $APP_REGISTRY_URL/valicit_backend:consumer-development

    - cd terraform/development
    - terraform init
    - terraform apply -auto-approve

  only:
    - dev

deploy-production:
  stage: deploy-production
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  services:
  - name: docker:20-dind
    command: ["--tls=false"]
  before_script:
    - amazon-linux-extras install docker
    - curl -SL https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - yum install -y yum-utils
    - yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
    - yum -y install terraform-1.2.9
    - aws --version
    - docker --version
    - docker-compose --version
    - terraform -v
  environment: production
  script:
    - docker login -u AWS -p $(aws ecr get-login-password --region eu-west-1) $APP_REGISTRY_URL
    - docker build . -t valicit_backend:api --build-arg BUILD_APP=api
    - docker tag valicit_backend:api $APP_REGISTRY_URL/valicit_backend:api-production
    - docker push $APP_REGISTRY_URL/valicit_backend:api-production

    - docker build . -t valicit_backend:web --build-arg BUILD_APP=web
    - docker tag valicit_backend:web $APP_REGISTRY_URL/valicit_backend:web-production
    - docker push $APP_REGISTRY_URL/valicit_backend:web-production

    - docker build . -t valicit_backend:admin --build-arg BUILD_APP=admin
    - docker tag valicit_backend:admin $APP_REGISTRY_URL/valicit_backend:admin-production
    - docker push $APP_REGISTRY_URL/valicit_backend:admin-production

    - docker build . -t valicit_backend:producer --build-arg BUILD_APP=producer
    - docker tag valicit_backend:producer $APP_REGISTRY_URL/valicit_backend:producer-production
    - docker push $APP_REGISTRY_URL/valicit_backend:producer-production

    - docker build . -t valicit_backend:consumer --build-arg BUILD_APP=consumer
    - docker tag valicit_backend:consumer $APP_REGISTRY_URL/valicit_backend:consumer-production
    - docker push $APP_REGISTRY_URL/valicit_backend:consumer-production

    - cd terraform/production
    - terraform init
    - terraform apply -auto-approve

  only:
    - main